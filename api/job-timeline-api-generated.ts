/* tslint:disable */
/* eslint-disable */
/*
intelliHR Public API

You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)

The version of the OpenAPI document: V1
Contact: support@intellihr.co

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { JobIdTimelineGetResponse } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * JobTimelineApi - axios parameter creator
 * @export
 */
export const JobTimelineApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Returns the upcoming changes and current information about a [Job](https://developers.intellihr.io/docs/v1/).
         * @summary Get Job Timeline
         * @param {string} jobId Id string param for relevant [Job](https://developers.intellihr.io/docs/v1/)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpcomingChanges: async (jobId: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'jobId' is not null or undefined
            assertParamExists('getUpcomingChanges', 'jobId', jobId)
            const localVarPath = `/jobs/{jobId}/timeline`
                .replace(`{${"jobId"}}`, encodeURIComponent(String(jobId !== undefined ? jobId : `-jobId-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication ApiKey required
            await setApiKeyToObject({ object: localVarHeaderParameter, key: "Authorization", keyParamName: "apiKey", configuration })

    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/jobs/{jobId}/timeline',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * JobTimelineApi - functional programming interface
 * @export
 */
export const JobTimelineApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = JobTimelineApiAxiosParamCreator(configuration)
    return {
        /**
         * Returns the upcoming changes and current information about a [Job](https://developers.intellihr.io/docs/v1/).
         * @summary Get Job Timeline
         * @param {JobTimelineApiGetUpcomingChangesRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getUpcomingChanges(requestParameters: JobTimelineApiGetUpcomingChangesRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<JobIdTimelineGetResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getUpcomingChanges(requestParameters.jobId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * JobTimelineApi - factory interface
 * @export
 */
export const JobTimelineApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = JobTimelineApiFp(configuration)
    return {
        /**
         * Returns the upcoming changes and current information about a [Job](https://developers.intellihr.io/docs/v1/).
         * @summary Get Job Timeline
         * @param {JobTimelineApiGetUpcomingChangesRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUpcomingChanges(requestParameters: JobTimelineApiGetUpcomingChangesRequest, options?: AxiosRequestConfig): AxiosPromise<JobIdTimelineGetResponse> {
            return localVarFp.getUpcomingChanges(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getUpcomingChanges operation in JobTimelineApi.
 * @export
 * @interface JobTimelineApiGetUpcomingChangesRequest
 */
export type JobTimelineApiGetUpcomingChangesRequest = {
    
    /**
    * Id string param for relevant [Job](https://developers.intellihr.io/docs/v1/)
    * @type {string}
    * @memberof JobTimelineApiGetUpcomingChanges
    */
    readonly jobId: string
    
}

/**
 * JobTimelineApiGenerated - object-oriented interface
 * @export
 * @class JobTimelineApiGenerated
 * @extends {BaseAPI}
 */
export class JobTimelineApiGenerated extends BaseAPI {
    /**
     * Returns the upcoming changes and current information about a [Job](https://developers.intellihr.io/docs/v1/).
     * @summary Get Job Timeline
     * @param {JobTimelineApiGetUpcomingChangesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof JobTimelineApiGenerated
     */
    public getUpcomingChanges(requestParameters: JobTimelineApiGetUpcomingChangesRequest, options?: AxiosRequestConfig) {
        return JobTimelineApiFp(this.configuration).getUpcomingChanges(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
